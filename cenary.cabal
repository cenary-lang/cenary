-- Initial cenary.cabal generated by cabal init.  For further documentation,
--  see http://haskell.org/cabal/users-guide/

name:                cenary
version:             0.1.0.0
synopsis:            A Language and its compiler on Ethereum Virtual Machine
description:         A Language and its compiler on Ethereum Virtual Machine
license:             MIT
license-file:        LICENSE
author:              Yiğit Özkavcı
maintainer:          yigitozkavci8@gmail.com
category:            Network
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/yigitozkavci/cenary

library
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall
  build-depends:
    base >=4.9 && <4.11,
    containers,
    cryptonite,
    either,
    errors,
    lens,
    monad-logger,
    mtl,
    optparse-applicative,
    parsec,
    parsec-numbers,
    pretty-simple,
    process,
    template-haskell,
    text,
    bytestring,
    indexed,
    aeson,
    aeson-casing
  exposed-modules:
    Cenary.Codegen,
    Cenary.Codegen.Types,
    Cenary.EvmAPI.API,
    Cenary.Lexer,
    Cenary.Lexer.Language,
    Cenary.Parser,
    Cenary.Syntax,
    Cenary.Options,
    Cenary.Utils.EvmAsm,
    Cenary.Main,
    Cenary.Crypto.Keccak,
    Evm.Abi,
    Cenary.Deployment,
    Cenary.EvmAPI.AbiBridge,
    Cenary.Error,
    Cenary.Codegen.Register
    Cenary.Codegen.Address
    Cenary.Codegen.CodegenError
    Cenary.Codegen.CodegenM
    Cenary.Codegen.CodegenState
    Cenary.Codegen.Context
    Cenary.Codegen.ContextM
    Cenary.Codegen.Env
    Cenary.Codegen.Evm
    Cenary.Codegen.FuncRegistry
    Cenary.Codegen.MappingOrder
    Cenary.Codegen.Memory
    Cenary.Codegen.Operand
    Cenary.Codegen.Procedures
    Cenary.Codegen.Scope
    Cenary.Codegen.TcM
    Cenary.Codegen.VariableStatus
    Cenary.EvmAPI.Instruction
    Cenary.EvmAPI.Program
    Cenary.EvmAPI.OpcodeM

executable cenary
    build-depends:
      cenary,
      base >=4.9 && <4.11,
      containers,
      either,
      errors,
      lens,
      monad-logger,
      mtl,
      optparse-applicative,
      parsec,
      parsec-numbers,
      pretty-simple,
      process,
      template-haskell,
      text
    main-is: src/Main.hs
    default-language: Haskell2010
